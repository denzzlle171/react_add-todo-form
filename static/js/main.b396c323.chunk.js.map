{"version":3,"sources":["api/users.ts","servises/user.ts","components/Form/Form.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","Form","onSubmit","useState","title","setTitle","setUserId","hesTitleEror","setHesTitleEror","hesSelectedUser","setHesSelectedUser","action","method","event","preventDefault","completed","className","type","value","onChange","target","placeholder","disabled","map","UserInfo","href","TodoInfo","todo","TodoList","todos","App","toDos","setToDos","data","newTodo","Math","max","todoitem","curentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b396c323.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find((user) => user.id === userId) || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../servises/user';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const Form: React.FC <Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [hesTitleEror, setHesTitleEror] = useState(false);\n  const [hesSelectedUser, setHesSelectedUser] = useState(false);\n\n  const handleTitleChange = (event :React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHesTitleEror(false);\n  };\n\n  const handleUserIdChange = (event :React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHesSelectedUser(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHesTitleEror(!title);\n    setHesSelectedUser(userId < 1);\n\n    if (!title || userId < 1) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n          placeholder=\"Enter a title\"\n        />\n        {hesTitleEror && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>\n            Choose a user\n          </option>\n          {usersFromServer.map((user) => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hesSelectedUser && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { Form } from './components/Form';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport { getUserById } from './servises/user';\n\nexport const todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewToDoId(todo: Todo[]) {\n  const maxID = Math.max(...todo.map((todoitem) => todoitem.id));\n\n  return maxID + 1;\n}\n\nexport const App: React.FC = () => {\n  const [toDos, setToDos] = useState(todos);\n\n  const addTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: getNewToDoId(toDos),\n      ...data,\n    };\n\n    setToDos((curentTodos) => [...curentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <Form onSubmit={addTodo} />\n      <TodoList todos={toDos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}